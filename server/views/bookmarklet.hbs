(function(){
		
	console.log('perf-widget script inserted...');

	const holder = document.createElement('div');
	const style = document.createElement('style');
	const close = document.createElement('span');
	const refresh = document.createElement('span');

	const resultsURL = `{{serviceURL}}/client/data-for?url=${window.location.href}`;
	var output = ``;

	holder.setAttribute('id', 'perf-widget-holder');

	if(window.pWidgeGlobals === undefined){
		window.pWidgeGlobals = {};	
	}

	style.textContent = `

		#perf-widget-holder {
			all: initial;
		}

		#perf-widget-holder > * {
			all: unset;
		}

		#perf-widget-holder {
			position: fixed;
			bottom : 20px;
			right : 20px;
			width : 250px;
			max-height : 300px;
			overflow-y: auto;
			background-color : #333;
			z-index : 2147483647;
			border-radius: 5px;
			box-shadow: 0 0 5px black;
			color: white;
			box-sizing: border-box;
			padding: 10px;
			font-size: 14px;
			padding-bottom: 20px;
			font-family: Helvetica, Arial, sans-serif;
		}

		#perf-widget-holder > *{
			font-weight: 100;
		}

		#perf-widget-holder .close{
			position: absolute;
			right: 5px;
			top: 5px;
			color: rgba(255,255,255,.5);
			border: 1px solid white;
			width: 1em;
			height: 1em;
			text-align: center;
			border-radius: 100%;
			cursor: pointer;
			background-size: 50%;
			background-position: 50%;
			background-repeat: no-repeat;
			background-image: url('{{serviceURL}}/static/images/cross.png');
		}

		#perf-widget-holder .refresh{
			position: absolute;
			right: 30px;
			top: 5px;
			color: rgba(255,255,255,.5);
			// border: 1px solid white;
			width: 1em;
			height: 1em;
			text-align: center;
			border-radius: 100%;
			cursor: pointer;
			background-size: 80%;
			background-position: 50%;
			background-repeat: no-repeat;
			background-image: url('{{serviceURL}}/static/images/refresh.png');
		}

		#perf-widget-holder h3:first-of-type{
			margin-top:0;
		}

		#perf-widget-holder h3{
			margin-top: 10px;
			display: block;
		}

		#perf-widget-holder .insights{
			padding-left: 10px;
		    display: block;
		    margin-top: 5px;
		}

		#perf-widget-holder .insights h4{
			font-size: 0.8em;
			margin-top: 0;
			margin-bottom : 0.3em;
		}

		#perf-widget-holder .insights li{
			list-style-type: none;
			padding: 0;
			margin: 0;
			font-size: 0.8em;
			width: 90%;
			margin-left: 10%;
			display: inline-block;
		}

		#perf-widget-holder .insights li::before{
			width: 1em;
			height: 1em;
			display: inline-block;
			content: "";
			margin-right: 0.5em;
			background-size: 100%;
			padding-top: 2px;
			background-position: 50%;
			background-repeat: no-repeat;
			background-image: url('{{serviceURL}}/static/images/unsure.png');
			position: absolute;
			margin-left: -18px;
		}

		#perf-widget-holder .insights li.ok-true::before{
			background-image: url('{{serviceURL}}/static/images/check.png');
		}

		#perf-widget-holder .insights li.ok-false::before{
			background-image: url('{{serviceURL}}/static/images/issue.png');
		}

		#perf-widget-holder .insights li a{
			color: rgba(255,255,255,.8);
			border: 0 solid black;
			text-decoration:none;
			display: inline-block;
		}

	`;

	function resetTimeout(){
		if(pWidgeGlobals.tO !== undefined){
			clearTimeout(pWidgeGlobals.tO);		
		}
	}

	function removeSelf(){
		const scriptEl = document.getElementById('perf-widget-script-src');
		scriptEl.parentNode.removeChild(scriptEl);
		style.parentNode.removeChild(style);
		holder.parentNode.removeChild(holder);
	}

	function loadSelf(){
		const tA = document.createElement('textarea');
		tA.innerHTML = "{{bm}}";
		window.location = tA.value;
	}

	{{#if data}}

		pWidgeGlobals.freshInsights = true;

		{{#each data}}

			output += `<h3>{{category}}</h3><div class="insights"><h4>{{provider}}</h4>`;

			{{#each comparisons}}

				output += `<li class="ok-{{ ok }}"><a href="{{../link}}" target="_blank">{{text}}</a></li>`;

			{{/each}}

			output += "</div>";

		{{/each}}


		close.setAttribute('class', 'close');
		close.addEventListener('click', function(){
			window.pWidgeGlobals.freshInsights = false;
			resetTimeout();
			removeSelf();
		}, false);

		refresh.setAttribute('class', 'refresh');
		refresh.addEventListener('click', function(){
			removeSelf();
			loadSelf();
		}, false);

	{{else}}

		output += `{{ message }}`
		window.pWidgeGlobals.freshInsights = false;
		resetTimeout();
		pWidgeGlobals.tO = setTimeout(function(){
			removeSelf()
		}, 3000);

	{{/if}}

	holder.innerHTML = output;
	holder.appendChild(close);
	holder.appendChild(refresh);

	document.head.appendChild(style);
	document.body.appendChild(holder);

}());
